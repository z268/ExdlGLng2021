// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/authors/": {
            "get": {
                "tags": [
                    "Authors"
                ],
                "summary": "Get list of authors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repository.Author"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Authors"
                ],
                "summary": "Create an author",
                "parameters": [
                    {
                        "description": "Author",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.AuthorRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/repository.Author"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    }
                }
            }
        },
        "/authors/{author_uuid}/": {
            "get": {
                "tags": [
                    "Authors"
                ],
                "summary": "Get an author",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author UUID",
                        "name": "author_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repository.Author"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Authors"
                ],
                "summary": "Update an author",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author UUID",
                        "name": "author_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Author",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.AuthorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repository.Author"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Authors"
                ],
                "summary": "Delete an author",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author UUID",
                        "name": "author_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empty response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    }
                }
            }
        },
        "/books/": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Search books",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "comma-separated uuids",
                        "name": "categories",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "comma-separated uuids",
                        "name": "authors",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search by author name",
                        "name": "category_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search by category name",
                        "name": "author_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/http.PaginatedResults"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "results": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/definitions/repository.Book"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Create a Book",
                "parameters": [
                    {
                        "description": "Book",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.BookRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/repository.Book"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    }
                }
            }
        },
        "/books/{book_uuid}/": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get a books",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book UUID",
                        "name": "book_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repository.Book"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Books"
                ],
                "summary": "Update a books",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book UUID",
                        "name": "book_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Book",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.BookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repository.Book"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Books"
                ],
                "summary": "Delete a books",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book UUID",
                        "name": "book_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repository.Book"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    }
                }
            }
        },
        "/books/{book_uuid}/categories/{category_uuid}/": {
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Create a book-category relation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book UUID",
                        "name": "book_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category UUID",
                        "name": "category_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Empty response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Books"
                ],
                "summary": "Delete a book-category relation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book UUID",
                        "name": "book_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category UUID",
                        "name": "category_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empty response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    }
                }
            }
        },
        "/categories/": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get list of categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repository.Category"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create an category",
                "parameters": [
                    {
                        "description": "Category",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.CategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/repository.Category"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    }
                }
            }
        },
        "/categories/{category_uuid}/": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category UUID",
                        "name": "category_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repository.Category"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category UUID",
                        "name": "category_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.CategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repository.Category"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category UUID",
                        "name": "category_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Empty response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http.AuthorRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Robert Martin"
                }
            }
        },
        "http.BookRequest": {
            "type": "object",
            "properties": {
                "author_uuid": {
                    "type": "string",
                    "example": "01234567-89ab-cdef-0123-456789abcdef"
                },
                "name": {
                    "type": "string",
                    "example": "Clean code"
                }
            }
        },
        "http.CategoryRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Programming"
                },
                "parent_uuid": {
                    "type": "string",
                    "example": "524ab1ae-3293-4e90-9458-88b61eb95f0d"
                }
            }
        },
        "http.PaginatedResults": {
            "type": "object",
            "properties": {
                "next": {
                    "type": "string",
                    "example": "?page=5"
                },
                "page": {
                    "type": "integer",
                    "example": 4
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "previous": {
                    "type": "string",
                    "example": "?page=3"
                },
                "results": {
                    "type": "object"
                }
            }
        },
        "http.ResponseError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "repository.Author": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "repository.Book": {
            "type": "object",
            "properties": {
                "author_uuid": {
                    "type": "string",
                    "example": "01234567-89ab-cdef-0123-456789abcdef"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/repository.Category"
                    }
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "name": {
                    "type": "string",
                    "example": "Clean code"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "uuid": {
                    "type": "string",
                    "example": "01234567-89ab-cdef-0123-456789abcdef"
                }
            }
        },
        "repository.Category": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "name": {
                    "type": "string",
                    "example": "Programming"
                },
                "parent_uuid": {
                    "type": "string",
                    "example": "01234567-89ab-cdef-0123-456789abcdef"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "uuid": {
                    "type": "string",
                    "example": "01234567-89ab-cdef-0123-456789abcdef"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.1",
	Host:        "",
	BasePath:    "/api/v1/",
	Schemes:     []string{},
	Title:       "Book catalog service API",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
